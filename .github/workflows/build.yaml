# Name of Job

name: Package Docker Image

# Controls when the action will run. Triggers the workflow on commit push from the branchs listed.
# Also, triggers the workflow when matched the expression/pattern defined under tags: field.
on:
  push:
    branches:
    - main
    paths:
      - "**"

jobs:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    # Runs a single command using the runners shell
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    # Runs a set of commands using the runners shell
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 --select=E,W  --count --statistics kvstore main.py kv utils.py test.py tests/cli.py

  build:
    # Depends on lint job
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get branch name
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: get_branch

    - run:   echo "REPOSITORY_NAME=`echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//"`" >> $GITHUB_ENV
      shell: bash

    - name: Get commit id
      run: echo "##[set-output name=version;]$(echo `git ls-remote https://$${{ secrets.MY_PAT }}@github.com/yuvraj9/${REPOSITORY_NAME}.git ${{ steps.get_branch.outputs.branch }} | awk '{ print $1}' | cut -c1-7`)"
      id: get_version

    - name: Set up Buildx 
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/yuvraj9/${{ github.event.repository.name }}-${{ steps.get_branch.outputs.branch }}:${{ steps.get_version.outputs.version }}
          ghcr.io/yuvraj9/${{ github.event.repository.name }}-${{ steps.get_branch.outputs.branch }}:latest

  tests:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      server:
        # Docker Hub image
        image: ghcr.io/yuvraj9/key-value-store-main:latest
        #
        ports:
          # Opens tcp port 6379 on the host and service container
          - 5000:5000

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    # Runs a single command using the runners shell
    - name: Install Dependencies
      run: |
        pip install tox tox-gh-actions pytest
    # Runs a set of commands using the runners shell
    - name: Running test
      run: |
        tox
        ls
      env:
        # The hostname used to communicate with the server container
        URL: http://server:5000